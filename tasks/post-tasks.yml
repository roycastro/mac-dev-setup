---
- name: "Set default value for dotfiles_repo_local_destination"
  ansible.builtin.set_fact:
    background_image_path: "~/.dotfiles/configs/backgroundImage.jpeg"
  tags:
    - "post"
- name: Get current Wallpaper
  vars:
    script: 'tell app "finder" to get posix path of (get desktop picture as alias)'
  ansible.builtin.shell: |-
    set -e -o pipefail && \
    osascript -e '{{ script }}' | \
    grep {{ background_image_path }} | \
    wc -l
  register: current_wallpaper
  changed_when: current_wallpaper.stdout | trim != "1"
  tags:
    - "post"
- name: Set Desktop Background Image
  ansible.builtin.command: m wallpaper "{{ background_image_path }}"
  when: current_wallpaper.stdout == "0"
  tags:
    - "post"
- name: Executed to avoid issues with zsh compinit insecure directories warnings when attempting to load ZSH completions
  ansible.builtin.file:
    path: /opt/homebrew/share/zsh
    recurse: true
    mode: go-w
  tags:
    - "post"
- name: Clone repository with app-bar
  ansible.builtin.git:
    repo: https://github.com/Jean-Tinland/simple-bar.git
    dest: ~/Library/Application\ Support/Ãœbersicht/widgets/simple-bar
    clone: true
    update: true
    version: master
  tags:
    - "post"
- name: Clone repository with fonts that will be used by default ZSH theme
  ansible.builtin.git:
    repo: https://github.com/powerline/fonts.git
    dest: ~/.dotfiles/resources/powerline
    clone: true
    update: true
    version: master
  tags:
    - "post"
  notify:
    - Install Fonts ZSH theme
- name: Clone repository with fonts that will be used by default in VSCode to support agnoster ZSH theme
  ansible.builtin.git:
    repo: https://github.com/abertsch/Menlo-for-Powerline.git
    dest: ~/.dotfiles/resources/powerline-vscode
    clone: true
    update: true
    version: master
  tags:
    - "post"
  notify:
    - Install Fonts VSCode
- name: Clone repository with tmux's TPM (Tmux Plugin Manager)
  ansible.builtin.git:
    repo: https://github.com/tmux-plugins/tpm
    dest: ~/.tmux/plugins/tpm
    clone: true
    update: true
    version: master
  tags:
    - "post"
- name: Install Java SDKs and create generic Major version folder
  vars:
    JAVA_VERSIONS:
      - "11"
      - "8"
  args:
    executable: /bin/bash
  loop: "{{ JAVA_VERSIONS }}"
  ansible.builtin.shell: |
    set -e -o pipefail;
    JAVA_VERSION="{{ item }}"
    [[ -d ~/.sdkman/candidates/java/$JAVA_VERSION ]] && echo "present" && exit 0;
    JAVA_INSTALL_VERSION=$(bash -c "source $HOME/.sdkman/bin/sdkman-init.sh && sdk list java | grep -o "${JAVA_VERSION}\\.[0-9\\.]*-tem" | head -1");
    [[ -z "$JAVA_INSTALL_VERSION" ]] && \
     JAVA_INSTALL_VERSION=$(bash -c "source $HOME/.sdkman/bin/sdkman-init.sh && sdk list java | grep -o "${JAVA_VERSION}\\.[0-9\\.]*-amzn" | head -1");
    source "$HOME/.sdkman/bin/sdkman-init.sh";
    sdk install java "${JAVA_INSTALL_VERSION}" >/dev/null 2>&1 || true;
    ln -sf "${HOME}/.sdkman/candidates/java/${JAVA_INSTALL_VERSION}" "${HOME}/.sdkman/candidates/java/${JAVA_VERSION}";
  register: java11_installation
  changed_when: java11_installation.stdout | trim != "present"
  tags:
    - "post"
- name: Use generic Java 11 Major version
  ansible.builtin.shell: |
    JAVA_VERSION=11;
    set -e -o pipefail;
    current_version=$(basename $(readlink "${HOME}/.sdkman/candidates/java/current"));
    generic_version=$(basename $(readlink "${HOME}/.sdkman/candidates/java/${JAVA_VERSION}"));
    if [[ "${current_version}" =~ "${JAVA_VERSION}" ]]; then
      echo "present";
      exit 0;
    fi;
    source "$HOME/.sdkman/bin/sdkman-init.sh";
    sdk default java $JAVA_VERSION >/dev/null 2>&1 || true;
  register: set_default_java
  changed_when: set_default_java.stdout | trim != "present"
  tags:
    - "post"
- name: Install and use the Node version according to the previously configure dotfile(.nvmrc)
  ansible.builtin.command: "{{ ansible_user_shell }} -l -c '. $HOME/.zshrc && nvm install && nvm use'"
  register: set_default_node
  changed_when: set_default_node.rc != 0
  tags:
    - "post"
